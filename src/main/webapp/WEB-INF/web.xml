<?xml version="1.0" encoding="ISO-8859-1"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://java.sun.com/xml/ns/javaee" xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd" id="WebApp_ID" version="2.5">
  	<display-name>Default</display-name>
  	<welcome-file-list>
	    <welcome-file>index.html</welcome-file>
	</welcome-file-list>
  
  	<filter>
        <filter-name>encodingFilter</filter-name>
        <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
        <init-param>
            <param-name>encoding</param-name>
            <param-value>utf-8</param-value>
        </init-param>
    </filter>
    <filter-mapping>
        <filter-name>encodingFilter</filter-name>
        <url-pattern>*.do</url-pattern>
    </filter-mapping>
    
    <!--
    HTMLTagFilter의 경우는 파라미터에 대하여 XSS 오류 방지를 위한 변환을 처리합니다.
   우선 HTMLTagFIlter의 경우는 JSP의 <c:out /> 등을 사용하지 못하는 특수한 상황에서 사용하시면 됩니다.
   (<c:out />의 경우 뷰단에서 데이터 출력시 XSS 방지 처리가 됨)
   부득히 HTMLTagFilter를 사용하셔야 하는 경우는 web.xml 상에
   다음과 같이 CertProcessFilter(GPKI 인증 처리 오류 해결) 등록해 주시면 됩니다.
    -->
    <!-- 
    <filter>
        <filter-name>HTMLTagFilter</filter-name>
        <filter-class>com.jkthome.cmm.filter.HTMLTagFilter</filter-class>
    </filter>
    <filter-mapping>
        <filter-name>HTMLTagFilter</filter-name>
        <url-pattern>*.do</url-pattern>
    </filter-mapping>
	-->
	
	<filter>
        <filter-name>JktCommFilter</filter-name>
        <filter-class>com.jkthome.cmm.filter.JktCommFilter</filter-class>
    </filter>
    <filter-mapping>
        <filter-name>JktCommFilter</filter-name>
        <url-pattern>*.do</url-pattern>
    </filter-mapping>
	
  <context-param>
    <param-name>contextConfigLocation</param-name>
    <param-value>classpath:jkthome/config/spring/com/**/context-*.xml</param-value>
  </context-param>
  
  <listener>
    <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
  </listener>
  <servlet>
    <servlet-name>dispatcherServlet</servlet-name>
    <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
    <init-param>
      <param-name>contextConfigLocation</param-name>
      <param-value>/WEB-INF/config/jkthome/jkt-com-*.xml</param-value>
    </init-param>
    <load-on-startup>1</load-on-startup>
  </servlet>
  <servlet-mapping>
    <servlet-name>dispatcherServlet</servlet-name>
    <url-pattern>/</url-pattern>
  </servlet-mapping>
  
  	<!-- 서비스 부분에서 HttpServletRequest 정보 얻기 -->
	<listener>
	    <listener-class>org.springframework.web.context.request.RequestContextListener</listener-class>
	</listener>
 	
	<!-- <listener>
    	<listener-class>org.springframework.security.web.session.HttpSessionEventPublisher</listener-class>
	</listener> -->
</web-app>